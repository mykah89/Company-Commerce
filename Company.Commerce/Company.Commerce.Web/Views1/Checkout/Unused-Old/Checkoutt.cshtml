@model Proj.MVC.ViewModels.Checkout.CheckoutWizardViewModel
@using Microsoft.Web.Mvc

@{
    ViewBag.Title = "Checkout";
    var curStep = Model.Steps[Model.CurrentStep];
}

@helper checkoutCrumbs(Int32 stepNumber)
{
    var curStepNum = Model.CurrentStep;

    if (curStepNum == stepNumber)
    {
    <h3><i class="fa fa-dot-circle-o color"></i></h3>
    }
    else if (curStepNum > stepNumber)
    {
    <h3><i class="fa fa-circle"></i></h3>
    }
    else
    {
    <h3><i class="fa fa-circle-o"></i></h3>
    }
}

@section PageTitle
{
    <h2><i class="fa fa-arrow-circle-right"></i>Checkout</h2>
    <hr />
}

<div class="row">
    <div class="col-md-8 col-md-push-3">
        <div class="row text-center">
            <div class="col-md-2">
                @checkoutCrumbs(0)
                <h3>Shipping</h3>
            </div>
            <div class="col-md-1">
                <h3><i class="fa fa-minus"></i></h3>
            </div>
            <div class="col-md-2">
                @checkoutCrumbs(1)
                <h3>Billing</h3>
            </div>
            <div class="col-md-1">
                <h3><i class="fa fa-minus"></i></h3>
            </div>
            <div class="col-md-2">
                @checkoutCrumbs(2)
                <h3>Review</h3>
            </div>
        </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Checkout", "Checkout", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.Hidden("CurrentStepType", Model.Steps[Model.CurrentStep].GetType().FullName)
            @Html.Serialize("cwvm", Model)

@*<h2>@Model.Steps[Model.CurrentStep].StepName <small>@(Model.Steps[Model.CurrentStep].StepNumber + 1)</small></h2>*@
            
            @Html.EditorFor(m => Model.Steps[Model.CurrentStep], Model.Steps[Model.CurrentStep].GetType().Name)
@*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-danger">Confirm Order</button>
                    <button type="reset" class="btn btn-default">Reset</button>
                </div>
            </div>*@
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model.CurrentStep == 0)
                    {
                        if (Model.CurrentStep == Model.Steps.Count() - 1)
                        {
                        <button type="submit" class="btn btn-danger" name="submitorder">Submit Order</button>
                        }
                        else
                        {
                        <button type="submit" class="btn btn-primary" name="next">Next</button>
                        }
                    }
                    else if (Model.CurrentStep > 0)
                    {
                        <button type="submit" class="btn btn-primary" name="previous">Previous</button>

                        if (Model.CurrentStep == Model.Steps.Count() - 1)
                        {
                        <button type="submit" class="btn btn-danger" name="submitorder">Submit Order</button>
                        }
                        else
                        {
                        <button type="submit" class="btn btn-primary" name="next">Next</button>
                        }
                    }
                </div>
            </div>
        }
    </div>
    <div class="col-md-4">
        <h2>Order information</h2>
        @Html.DisplayFor(m => Model.Order, "OrderCheckout")
    </div>
</div>
