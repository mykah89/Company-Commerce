@model Project.MVC.Web.ViewModels.Checkout.Steps.BillingInformationViewModel

<!--Second step of the checkout process-->
@helper checkoutCrumbs(Int32 stepNumber)
{
    var curStepNum = 1;

    if (curStepNum == stepNumber)
    {
        <h2><i class="fa fa-dot-circle-o text-warning"></i></h2>
    }
    else if (curStepNum > stepNumber)
    {
        <h2><i class="fa fa-circle"></i></h2>
    }
    else
    {
        <h2><i class="fa fa-circle-o"></i></h2>
    }
}

<div class="container">
    <div id="page-title">
        <div class="row">
            <div class="col-md-3 icon">
                <i class="fa fa-user"></i>
            </div>
            <div class="col-md-9 details">
                <div>
                    <div class="row text-center">
                        <div class="col-md-2">
                            @checkoutCrumbs(0)
                            <h4>Shipping</h4>
                        </div>
                        <div class="col-md-1">
                            <h3><i class="fa fa-minus"></i></h3>
                        </div>
                        <div class="col-md-2">
                            @checkoutCrumbs(1)
                            <h4>Billing</h4>
                        </div>
                        <div class="col-md-1">
                            <h3><i class="fa fa-minus"></i></h3>
                        </div>
                        <div class="col-md-2">
                            @checkoutCrumbs(2)
                            <h4>Review</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="billinginformation-checkout" class="container">
    <div class="row">
        <div class="col-md-7">
            @using (Html.BeginForm("BillingInformation", "Checkout", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.HiddenFor(m => m.CheckoutInstance)

                <div class="row">
                    <h4 class="text-warning pull-left">Billing Address</h4>
                    <div class="pull-right">
                        <h4>@Html.CheckBoxFor(m => m.BillingSameAsShipping)</h4>
                    </div>
                    <div class="pull-right">
                        <h4><small class="text-warning"><label for="BillingSameAsShipping">Same as Shipping</label></small></h4>
                    </div>
                </div>
                <!--Billing Address-->
                <div class="row">
                    <div class="col-md-12">
                        @Html.EditorFor(m => m.BillingAddress, "EditorNewaddressCheckout")
                    </div>
                </div>

                <div class="row">
                    <h4 class="text-warning">Credit Card</h4>
                </div>
                <!--Credit Card-->
                <div class="row">
                    <div class="col-md-12">
                        @Html.EditorFor(m => m.CreditCardPayment, "EditorCreditcardCheckout")
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-2">
                        <div class="row">
                            <h4 class="text-warning">Gift Cards</h4>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div id="giftcard-updates">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <a id="btn-addanother" class="btn btn-sm btn-primary pull-right">Add</a>
                    </div>
                </div>
                <!--Gift Cards-->
                <div class="row">
                    <div id="gift-cards" class="col-md-12">
                        @if (Model.GiftCardPayments != null)
                        {
                            if (Model.GiftCardPayments.Any())
                            {
                                foreach (var gc in Model.GiftCardPayments)
                                {
                                    if (gc.Balance > 0)
                                    {
                                        @Html.Partial("~/Views/Checkout/DisplayTemplates/DisplayGiftcardCheckout.cshtml", gc)
                                    }
                                    else
                                    {
                                        @Html.Partial("~/Views/Checkout/EditorTemplates/EditorGiftcardCheckout.cshtml", gc)
                                    }
                                }
                            }
                            else
                            {
                                @Html.Partial("~/Views/Checkout/EditorTemplates/EditorGiftcardCheckout.cshtml", new Project.MVC.Web.ViewModels.Checkout.GiftCardPaymentViewModel())
                            }
                        }
                        else
                        {
                            @Html.Partial("~/Views/Checkout/EditorTemplates/EditorGiftcardCheckout.cshtml", new Project.MVC.Web.ViewModels.Checkout.GiftCardPaymentViewModel())
                        }
                    </div>
                </div>

                <div class="col-md-12">
                    <!--Navigation Controls-->
                    <div class="row checkout-nav">
                        <div class="btn-toolbar">
                            <div class="btn-group">
                                <button type="submit" name="Previous" value="Previous" class="btn btn-danger pull-right cancel">Previous</button>
                            </div>
                            <div class="btn-group">
                                <button type="submit" name="Next" value="Next" class="btn btn-primary pull-right">Next</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!--Auxillary Information-->
        <div class="col-md-5">
            <div class="row">
                <h4 class="text-warning">Order Details</h4>
            </div>
            <div class="col-md-12">
                <table>
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                            <th>Unit Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var oDetail in Model.OrderDetails)
                        {
                            <tr>
                                <td>@oDetail.Product.ProductName</td>
                                <td><img class="thumbnail" src="@Url.Content("~/" + oDetail.Product.DefaultImagePath)" alt="ProductImage" /></td>
                                <td>@Html.CurrencyFormatter(oDetail.UnitPrice)</td>
                                <td>@Html.CurrencyFormatter(oDetail.UnitPrice * oDetail.Quantity)</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td></td>
                            <td class="text-right">
                                <p>Shipping</p>
                                <p>Tax</p>
                                <p>Total</p>
                            </td>
                            <td>
                                <p>@Html.CurrencyFormatter(Model.ShippingCost)</p>
                                <p>@Html.CurrencyFormatter(Model.Tax)</p>
                                <p>@Html.CurrencyFormatter(Model.OrderDetails.Sum(od => od.Quantity * od.UnitPrice) + Model.Tax + Model.ShippingCost)</p>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        //Required to validate gift cards as they are added.
        var giftCardUpdateMessageContainer = $('#giftcard-updates');

        //Required to rehook the validation for dynamic content
        function rehookUnobtrusive() {
            var form = $("#form-div").find('form');
            form.removeData('validator')
            form.removeData('unobtrusiveValidation');
            jQuery.validator.unobtrusive.parse(form);
        };

        function checkBalance() {
            var rowId = $(this).data("rowid");
            var gcRow = $(document).find('[data-rowid=' + rowId + ']');
            var gcNumber = $.trim(gcRow.find('[data-attribute=GiftCardNumber]').val());
            var gcPin = $.trim(gcRow.find('[data-attribute=GiftCardPin]').val());

            if (!gcNumber, !gcPin) {
                gcUpdateMessage(false, "Missing information.");
            }
            else {
                $.get("@Url.Action("CheckBalance","GiftCard")", { "giftCardNumber": gcNumber, "giftCardPin": gcPin }).success(function (data) {
                    if (data.Success) {

                        gcUpdateMessage(true);// 'Balance remaining : ' + data.Data);

                        gcRow.replaceWith(data.Data);
                    }
                    else {
                        gcUpdateMessage(false, data.Errors.toString());
                    }
                }).fail(function () {
                    gcUpdateMessage(false, "There was a problem contacting the server.");
                });
            }
        };

        function addAnother() {
            $.get("@Url.Action("_CheckoutGiftCardRow", "Checkout")").success(function (data) {
                $('#gift-cards').append(data)
                rehookUnobtrusive();
            }).fail(function () {
                gcUpdateMessage(false, "There was a problem contacting the server.")
            });
        };

        function removeCard() {
            var rowId = $(this).data("rowid");

            $(document).find('[data-rowid=' + rowId + ']').remove();
        }

        $(document).ready(function () {
            //On will retain the event functionality
            //if more buttons are added dynamically.
            $(document.body).on("click", '#btn-addanother', addAnother);
            $(document.body).on("click", '#btn-remove', removeCard);
            $(document.body).on("click", '#btn-apply', checkBalance);
        });

        function gcUpdateMessage(success, value) {

            var value = value || "";

            var gcUpdates = giftCardUpdateMessageContainer;

            //In case the contianer is still animating
            //jump to the final state of the animation and clear the que
            //so we can start the next animation
            gcUpdates.stop(false, true);

            //The final state of the animation results in the element not being visible
            //so it must be shown again.
            if (!gcUpdates.visible) {
                gcUpdates.show();
            }

            //Clear any existing classes on this element
            //so we can style it how we want.
            gcUpdates.removeClass();

            if (success) {
                //Display a friendly user message
                gcUpdates.addClass("text-success")
                    .html("Success. " + value)
                    .fadeOut(4000);
            }
            else {
                gcUpdates.addClass("text-danger")
                    .html("Failure. " + value)
                    .fadeOut(4000);
            }
        }

    </script>
}
